[gd_resource type="VisualShader" load_steps=25 format=2]

[ext_resource path="res://graphics/icons/skills/LightningIcon.png" type="Texture" id=1]
[ext_resource path="res://graphics/icons/skills/SkillFrame.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeIf" id=3]
default_input_values = [ 0, 0.0, 1, 0.7, 2, 1e-05, 3, Vector3( 0, 0, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeIf" id=14]
default_input_values = [ 0, 1.0, 1, 1.0, 2, 1e-05, 3, Vector3( 0, 0, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeVectorDecompose" id=28]

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=29]
function = 0

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=32]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.3, 0.3 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "ReadyPercentage"

[resource]
code = "shader_type canvas_item;
uniform float ReadyPercentage;
uniform sampler2D tex_frg_13;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:9
	float n_out9p0 = ReadyPercentage;

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, UV.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// VectorDecompose:19
	float n_out19p0 = n_out13p0.x;
	float n_out19p1 = n_out13p0.y;
	float n_out19p2 = n_out13p0.z;

// Input:21
	float n_out21p0 = TIME;

// ScalarFunc:20
	float n_out20p0 = sin(n_out21p0);

// ScalarFunc:24
	float n_out24p0 = abs(n_out20p0);

// ScalarOp:22
	float n_out22p0 = n_out24p0 * n_out19p1;

// VectorCompose:23
	vec3 n_out23p0 = vec3(n_out19p0, n_out22p0, n_out19p2);

// If:14
	float n_in14p1 = 1.00000;
	float n_in14p2 = 0.00001;
	vec3 n_in14p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in14p5 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out14p0;
	if(abs(n_out9p0 - n_in14p1) < n_in14p2)
	{
		n_out14p0 = n_out23p0;
	}
	else if(n_out9p0 < n_in14p1)
	{
		n_out14p0 = n_in14p5;
	}
	else
	{
		n_out14p0 = n_in14p4;
	}

// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// VectorDecompose:11
	float n_out11p0 = n_out10p0.x;
	float n_out11p1 = n_out10p0.y;
	float n_out11p2 = n_out10p0.z;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// VectorDecompose:5
	float n_out5p0 = n_out2p0.x;
	float n_out5p1 = n_out2p0.y;
	float n_out5p2 = n_out2p0.z;

// ScalarOp:4
	float n_out4p0 = n_out5p0 + n_out5p1;

// ScalarOp:6
	float n_out6p0 = n_out4p0 + n_out5p2;

// VectorCompose:7
	vec3 n_out7p0 = vec3(n_out6p0, n_out6p0, n_out6p0);

// VectorOp:8
	vec3 n_in8p1 = vec3(0.30000, 0.30000, 0.30000);
	vec3 n_out8p0 = n_out7p0 * n_in8p1;

// If:12
	float n_in12p2 = 0.00001;
	vec3 n_out12p0;
	if(abs(n_out11p0 - n_out9p0) < n_in12p2)
	{
		n_out12p0 = n_out8p0;
	}
	else if(n_out11p0 < n_out9p0)
	{
		n_out12p0 = n_out2p0;
	}
	else
	{
		n_out12p0 = n_out8p0;
	}

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 + n_out12p0;

// ScalarFunc:17
	float n_out17p0 = floor(n_out9p0);

// ScalarOp:16
	float n_out16p0 = n_out13p1 * n_out17p0;

// ScalarOp:18
	float n_out18p0 = n_out16p0 + n_out2p1;

// Output:0
	COLOR.rgb = n_out15p0;
	COLOR.a = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 181.645, 64.0043 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2620, 240 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -680, 280 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 220, 40 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -100, 140 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 440, 140 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 720, 160 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 1000, 160 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 1040, 60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 900, -140 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1100, -120 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 1640, 280 )
nodes/fragment/13/node = SubResource( 13 )
nodes/fragment/13/position = Vector2( 1040, -420 )
nodes/fragment/14/node = SubResource( 14 )
nodes/fragment/14/position = Vector2( 2160, -120 )
nodes/fragment/15/node = SubResource( 15 )
nodes/fragment/15/position = Vector2( 2380, 80 )
nodes/fragment/16/node = SubResource( 16 )
nodes/fragment/16/position = Vector2( 1880, -200 )
nodes/fragment/17/node = SubResource( 17 )
nodes/fragment/17/position = Vector2( 1620, -120 )
nodes/fragment/18/node = SubResource( 18 )
nodes/fragment/18/position = Vector2( 2200, 420 )
nodes/fragment/19/node = SubResource( 28 )
nodes/fragment/19/position = Vector2( 1340, -340 )
nodes/fragment/20/node = SubResource( 29 )
nodes/fragment/20/position = Vector2( 1329.87, -441 )
nodes/fragment/21/node = SubResource( 30 )
nodes/fragment/21/position = Vector2( 1080, -520 )
nodes/fragment/22/node = SubResource( 31 )
nodes/fragment/22/position = Vector2( 1620, -420 )
nodes/fragment/23/node = SubResource( 32 )
nodes/fragment/23/position = Vector2( 1880, -320 )
nodes/fragment/24/node = SubResource( 33 )
nodes/fragment/24/position = Vector2( 1300, -540 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 4, 0, 5, 1, 4, 1, 5, 2, 6, 1, 4, 0, 6, 0, 6, 0, 7, 0, 6, 0, 7, 1, 6, 0, 7, 2, 7, 0, 8, 0, 10, 0, 11, 0, 8, 0, 12, 3, 8, 0, 12, 4, 2, 0, 12, 5, 11, 0, 12, 0, 9, 0, 12, 1, 12, 0, 15, 1, 14, 0, 15, 0, 15, 0, 0, 0, 9, 0, 14, 0, 13, 1, 16, 0, 9, 0, 17, 0, 17, 0, 16, 1, 2, 1, 18, 1, 16, 0, 18, 0, 18, 0, 0, 1, 13, 0, 19, 0, 21, 0, 20, 0, 19, 2, 23, 2, 23, 0, 14, 3, 20, 0, 24, 0, 19, 1, 22, 1, 19, 0, 23, 0, 22, 0, 23, 1, 24, 0, 22, 0 )
